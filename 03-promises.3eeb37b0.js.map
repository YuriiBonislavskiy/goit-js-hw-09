{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAGzBC,EAAgBJ,EAAKC,KAAKI,UAAUC,WAyB1C,SAASC,EAAcC,EAAUC,EAAOC,GAEtCC,YAAW,KACT,IAAIC,SAAQ,CAACC,EAASC,KACEC,KAAKC,SAAW,IAEpCH,EAAQ,uBAAqBL,QAAiBC,OAE9CK,EAAK,sBAAoBN,QAAeC,MAAU,IAEnDQ,MAAKC,IACJC,EAAArB,GAASsB,OAAOC,QAAQH,EAAQ,CAC9BI,QAASZ,GACT,IAEHa,OAAMC,IACLL,EAAArB,GAASsB,OAAOK,QAAQD,EAAO,CAC7BF,QAASZ,GACT,GACF,GACHD,E,CA3CY,IAAIiB,SAAS1B,EAAKC,MAG1B0B,SAAQ,CAACC,EAAOC,KACvB7B,EAAK6B,GAAQ7B,EAAKC,KAAKE,cAAc,IAAIC,YAAwByB,MAAS,IAI5E7B,EAAKC,KAAK6B,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAIC,iBACJ,IAAIvB,EAAQwB,OAAOjC,EAAKS,MAAMmB,OAC9B,MAAMM,EAAOD,OAAOjC,EAAKkC,KAAKN,OAE9B,IAAIlB,EAAWD,GAASwB,OAAOjC,EAAKmC,OAAOP,OAAS,GAAKM,EACzD,IAAK,IAAIE,EAAI,EAAGA,GAAKH,OAAOjC,EAAKmC,OAAOP,OAAQQ,GAAK,EACnD7B,EAAc6B,EAAG3B,EAAOC,GACxBD,GAASyB,EACTxB,GAAYwB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('form'),\n};\n\nconst formClassName = refs.form.className.toString();\n\nconst formData = new FormData(refs.form);\nconst promise = null;\n\nformData.forEach((value, name) => {\n  refs[name] = refs.form.querySelector(`.${formClassName} [name=\"${name}\"]`);\n});\n// console.log(refs);\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  let delay = Number(refs.delay.value);\n  const step = Number(refs.step.value);\n  // console.log(refs.amount.value);\n  let maxDelay = delay + (Number(refs.amount.value) - 1) * step;\n  for (let i = 1; i <= Number(refs.amount.value); i += 1) {\n    createPromise(i, delay, maxDelay);\n    delay += step;\n    maxDelay -= step;\n  }\n}\n\nfunction createPromise(position, delay, maxDelay) {\n  // console.log(`${position}  ${delay}`);\n  setTimeout(() => {\n    new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    })\n      .then(result => {\n        Notiflix.Notify.success(result, {\n          timeout: maxDelay,\n        });\n      })\n      .catch(error => {\n        Notiflix.Notify.failure(error, {\n          timeout: maxDelay,\n        });\n      });\n  }, delay);\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","$47d4ff9957288465$var$formClassName","className","toString","$47d4ff9957288465$var$createPromise","position","delay","maxDelay","setTimeout","Promise","resolve","reject","Math","random","then","result","$parcel$interopDefault","Notify","success","timeout","catch","error","failure","FormData","forEach","value","name","addEventListener","evt","preventDefault","Number","step","amount","i"],"version":3,"file":"03-promises.3eeb37b0.js.map"}