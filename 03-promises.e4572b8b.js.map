{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAGzBC,EAAgBJ,EAAKC,KAAKI,UAAUC,WAyB1C,SAASC,EAAcC,EAAUC,EAAOC,GAEtCC,YAAW,WACT,IAAIC,SAAQ,SAACC,EAASC,GACEC,KAAKC,SAAW,IAEpCH,EAAQ,uBAAwCI,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAEtDK,EAAK,sBAAqCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,IAEjDS,MAAK,SAAAC,GACJC,EAAAtB,GAASuB,OAAOC,QAAQH,EAAQ,CAC9BI,QAASb,G,IAGZc,OAAM,SAAAC,GACLL,EAAAtB,GAASuB,OAAOK,QAAQD,EAAO,CAC7BF,QAASb,G,MAGdD,E,CA3CY,IAAIkB,SAAS3B,EAAKC,MAG1B2B,SAAQ,SAACC,EAAOC,GACvB9B,EAAK8B,GAAQ9B,EAAKC,KAAKE,cAAc,IAA4Bc,OAAxBb,EAAc,YAAea,OAALa,EAAK,M,IAIxE9B,EAAKC,KAAK8B,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAIC,iBACJ,IAAIxB,EAAQyB,OAAOlC,EAAKS,MAAMoB,OACxBM,EAAOD,OAAOlC,EAAKmC,KAAKN,OAC9BO,QAAQC,IAAIrC,EAAKsC,OAAOT,OACxB,IAAInB,EAAWD,GAASyB,OAAOlC,EAAKsC,OAAOT,OAAS,GAAKM,EACzD,IAAKI,EAAI,EAAGA,GAAKL,OAAOlC,EAAKsC,OAAOT,OAAQU,GAAK,EAC/ChC,EAAcgC,EAAG9B,EAAOC,GACxBD,GAAS0B,EACTzB,GAAYyB,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('form'),\n};\n\nconst formClassName = refs.form.className.toString();\n\nconst formData = new FormData(refs.form);\nconst promise = null;\n\nformData.forEach((value, name) => {\n  refs[name] = refs.form.querySelector(`.${formClassName} [name=\"${name}\"]`);\n});\n// console.log(refs);\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  let delay = Number(refs.delay.value);\n  const step = Number(refs.step.value);\n  console.log(refs.amount.value);\n  let maxDelay = delay + (Number(refs.amount.value) - 1) * step;\n  for (i = 1; i <= Number(refs.amount.value); i += 1) {\n    createPromise(i, delay, maxDelay);\n    delay += step;\n    maxDelay -= step;\n  }\n}\n\nfunction createPromise(position, delay, maxDelay) {\n  // console.log(`${position}  ${delay}`);\n  setTimeout(() => {\n    new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    })\n      .then(result => {\n        Notiflix.Notify.success(result, {\n          timeout: maxDelay,\n        });\n      })\n      .catch(error => {\n        Notiflix.Notify.failure(error, {\n          timeout: maxDelay,\n        });\n      });\n  }, delay);\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","$ce04d3a99e08e73b$var$formClassName","className","toString","$ce04d3a99e08e73b$var$createPromise","position","delay","maxDelay","setTimeout","Promise","resolve","reject","Math","random","concat","then","result","$parcel$interopDefault","Notify","success","timeout","catch","error","failure","FormData","forEach","value","name","addEventListener","evt","preventDefault","Number","step","console","log","amount","i"],"version":3,"file":"03-promises.e4572b8b.js.map"}